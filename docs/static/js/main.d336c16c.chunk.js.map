{"version":3,"sources":["components/InputFile.js","components/TableResults.js","helpers/analyzeImage.js","ImageDetectorApp.js","hooks/usePrediction.js","index.js"],"names":["InputFile","dataImage","setDataImage","useState","inputValue","setInputValue","className","type","onChange","image","target","files","readear","FileReader","onload","result","readAsDataURL","id","name","TableResults","info","map","label","confidence","toFixed","key","analyzeImage","img","a","ml5","model","classify","document","getElementById","results","ImageDetectorApp","data","loading","prediction","setPrediction","useEffect","then","res","usePrediction","src","alt","style","maxWidth","length","class","role","ReactDOM","render"],"mappings":"qNA8BeA,EA5BG,SAAC,GAAgC,EAA9BC,UAA+B,IAApBC,EAAmB,EAAnBA,aAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAa/C,OACI,oCACI,yBAAKC,UAAU,oBAEX,yBAAKA,UAAU,eACX,2BAAOC,KAAK,OAAOD,UAAU,oBAAoBE,SAdxC,SAAC,GAAgB,IAChCC,EAD+B,EAAbC,OACFC,MAAM,GAC5BN,EAAcI,GACd,IAAIG,EAAU,IAAIC,WAClBD,EAAQE,OAAU,YAAiB,IAAdJ,EAAa,EAAbA,OACjBR,EAAaQ,EAAOK,SAExBH,EAAQI,cAAcP,MAQV,2BAAOH,UAAU,oBAAoBW,GAAG,eAAeb,EAAWc,UCMvEC,EAzBM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAIhB,OACI,oCACI,wBAAId,UAAU,+BAENc,EAAKC,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAEf,OADAA,GAAyB,IAAXA,GAAgBC,QAAQ,GAC5B,wBACOlB,UAAY,kCACZmB,IAAKH,GAEV,2BAAG,2BAAIA,GAAP,KAAoBC,EAApB,Y,+BCb3BG,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEAEJC,kBAAoB,aAFhB,cAElBC,EAFkB,gBAGFA,EAAMC,SAASC,SAASC,eAAe,QAHrC,cAGlBC,EAHkB,yBAKjBA,GALiB,2CAAH,sDCgDVC,EA7CU,WAAO,IAAD,EAEOhC,mBAAS,MAFhB,mBAEpBF,EAFoB,KAETC,EAFS,OCHF,SAACyB,GAAS,IAAD,EAEExB,mBAAS,CAAEiC,KAAM,GAAIC,SAAS,IAFhC,mBAE3BC,EAF2B,KAEfC,EAFe,KAelC,OAZAC,qBAAU,WACFb,IACAY,EAAc,CAAEH,KAAM,GAAIC,SAAS,IACnCX,IAAee,MAAK,SAAAC,GAChBH,EAAc,CACVF,SAAS,EACTD,KAAMM,UAInB,CAACf,IAEGW,EDTmBK,CAAc1C,GAAhCmC,EAHmB,EAGnBA,KAAMC,EAHa,EAGbA,QAId,OACI,yBAAK/B,UAAU,OAEX,iDACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SAEX,yBAAKA,UAAU,WAAWW,GAAG,MAAM2B,IAAO3C,GAAa,+BAA4C4C,IAAI,SAASC,MAAO,CAAEC,SAAU,QAIvI,yBAAKzC,UAAU,SACX,kBAAC,EAAD,CAAWL,UAAWA,EAAWC,aAAcA,IAI1B,IAAhBkC,EAAKY,SAAiBX,GAAY,yBAAK/B,UAAU,uBAAf,qCAGlC+B,EACK,yBAAKY,MAAM,eACT,yBAAKA,MAAM,kCAAkCC,KAAK,UAC9C,0BAAMD,MAAM,WAAZ,gBAGN,kBAAC,EAAD,CAAc7B,KAAMgB,QEhClDe,IAASC,OAEL,kBAAC,EAAD,MAEFpB,SAASC,eAAe,W","file":"static/js/main.d336c16c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst InputFile = ({ dataImage, setDataImage }) => {\r\n\r\n    const [inputValue, setInputValue] = useState({});\r\n\r\n    const handleFileChange = ({ target }) => {\r\n        const image = (target.files[0])\r\n        setInputValue(image)\r\n        let readear = new FileReader()\r\n        readear.onload = (({ target }) => {\r\n            setDataImage(target.result)\r\n        })\r\n        readear.readAsDataURL(image)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"input-group mb-3\">\r\n\r\n                <div className=\"custom-file\">\r\n                    <input type=\"file\" className=\"custom-file-input\" onChange={handleFileChange} />\r\n                    <label className=\"custom-file-label\" id=\"label-input\">{inputValue.name}</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputFile;\r\n","import React from 'react';\r\n\r\nconst TableResults = ({ info }) => {\r\n\r\n    \r\n    \r\n        return(\r\n            <>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        info.map(({ label, confidence }) => {\r\n                            confidence = (confidence*100).toFixed(2)\r\n                            return  ( < li\r\n                                             className = \"list-group-item text-capitalize\" \r\n                                             key={label}\r\n                                        >\r\n                                        <p><b>{label}</b>: {confidence}%</p></li\r\n                                    >)\r\n                        })\r\n                }\r\n\r\n            </ul>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableResults;\r\n","\r\nimport * as ml5 from 'ml5'\r\n\r\nexport const analyzeImage = async(img) => {\r\n   \r\n    const model = await ml5.imageClassifier('MobileNet');\r\n    const results = await model.classify(document.getElementById(\"img\"))\r\n\r\n    return results;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport InputFile from './components/InputFile';\r\nimport TableResults from './components/TableResults';\r\nimport { analyzeImage } from './helpers/analyzeImage';\r\nimport { usePrediction } from './hooks/usePrediction';\r\n\r\nconst ImageDetectorApp = () => {\r\n\r\n    const [dataImage, setDataImage] = useState(null);\r\n    const { data, loading } = usePrediction(dataImage)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"m-5\">\r\n\r\n            <h1>ml5.js + React.js</h1>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-5\">\r\n\r\n                    <img className=\"rounded \" id=\"img\" src={(!dataImage) ? \"./assets/images/img-icon.png\" : dataImage} alt=\"Imagen\" style={{ maxWidth: 450 }} />\r\n\r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                    <InputFile dataImage={dataImage} setDataImage={setDataImage} />\r\n                    {/* <button className=\"btn btn-primary\">analyzeImage</button> */}\r\n\r\n                    {\r\n                        (data.length === 0 && !loading) && <div className=\"alert alert-primary\"> Seleccione una imagen, por favor</div>\r\n                    }\r\n                    {\r\n                        (loading)\r\n                            ? <div class=\"text-center\">\r\n                                <div class=\"spinner-border m-5 text-primary\" role=\"status\">\r\n                                    <span class=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                            : <TableResults info={data} />\r\n\r\n\r\n                    }\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageDetectorApp;\r\n","import { useEffect, useState } from 'react';\r\nimport { analyzeImage } from '../helpers/analyzeImage';\r\n\r\nexport const usePrediction = (img) => {\r\n   \r\n    const [prediction, setPrediction] = useState({ data: [], loading: false });\r\n    useEffect(() => {\r\n        if (img) {\r\n            setPrediction({ data: [], loading: true })\r\n            analyzeImage().then(res => {\r\n                setPrediction({\r\n                    loading: false,\r\n                    data: res\r\n                })\r\n            })\r\n        }\r\n    }, [img]);\r\n\r\n    return prediction\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ImageDetectorApp from './ImageDetectorApp';\n\n\nReactDOM.render(\n  \n    <ImageDetectorApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}